/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nosoop.jsontool;

import bundled.jsontool.org.json.JSONException;
import bundled.jsontool.org.json.JSONObject;
import bundled.jsontool.org.json.JSONTokener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Map;
import java.util.Set;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author nosoop < nosoop at users.noreply.github.com >
 */
public class Main extends javax.swing.JFrame {

    DefaultMutableTreeNode jsonRoot;
    Object[][] dataTable;

    /**
     * Creates new form NewJFrame
     */
    public Main() {
        jsonRoot = new DefaultMutableTreeNode();
        
        try {
            jsonRoot.setUserObject(new JSONReference(String.format("root: no file"), new JSONObject()));
        } catch (JSONException e) {
        }
        
        dataTable = new Object[][] {
            { null, null, null }
        };

        initComponents();

        FILE_DIALOG = new JFileChooser();
    }

    void loadFile(File jsonFile) {
        try {
            JSONObject jsonData = new JSONObject(new JSONTokener(new FileInputStream(jsonFile)));

            // Remove previous JSON object tree and reload GUI.
            jsonRoot.removeAllChildren();
            jsonRoot.setUserObject(new JSONReference(String.format("root: %s", jsonFile.getName()), jsonData));
            ((DefaultTreeModel) jsonTree.getModel()).reload();

            // Build the JSON tree again and expand root (?).
            buildJSONTree(jsonRoot, jsonData);
            jsonTree.expandRow(0);
        } catch (JSONException e) {
            e.printStackTrace();
        } catch (FileNotFoundException e) {
            // Well, you're boned.
        }
    }

    void buildJSONTree(DefaultMutableTreeNode treeNode, JSONObject jsonData)
            throws JSONException {
        for (String key : (Set<String>) jsonData.keySet()) {
            if (jsonData.optJSONObject(key) != null) {
                JSONReference ref = new JSONReference(key, jsonData.getJSONObject(key));

                DefaultMutableTreeNode innerObject =
                        new DefaultMutableTreeNode(ref);
                buildJSONTree(innerObject, jsonData.getJSONObject(key));

                treeNode.add(innerObject);
            }
        }
    }

    void buildTableElements(JSONReference ref) {
        DefaultTableModel jsonTable = ((DefaultTableModel) jsonObjectTable.getModel());
        
        for (int i = jsonTable.getRowCount() - 1; i >= 0; i--) {
            jsonTable.removeRow(i);
        }
        
        for (Map.Entry keyValues : ref.keyValues.entrySet()) {
            System.out.printf("%s %s%n", keyValues.getKey(), keyValues.getValue());
            jsonTable.addRow(new Object[] { keyValues.getKey(), "", keyValues.getValue() });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jsonTreeScrollPane = new javax.swing.JScrollPane();
        jsonTree = new javax.swing.JTree(jsonRoot);
        jsonTableScrollPane = new javax.swing.JScrollPane();
        jsonObjectTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(192);

        jsonTree.setShowsRootHandles(true);
        jsonTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jsonTreeValueChanged(evt);
            }
        });
        jsonTreeScrollPane.setViewportView(jsonTree);

        jSplitPane1.setLeftComponent(jsonTreeScrollPane);

        jsonObjectTable.setModel(new javax.swing.table.DefaultTableModel(
            dataTable,
            new String [] {
                "Name", "Type", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jsonObjectTable.setFillsViewportHeight(true);
        jsonObjectTable.setShowHorizontalLines(false);
        jsonObjectTable.setShowVerticalLines(false);
        jsonTableScrollPane.setViewportView(jsonObjectTable);

        jSplitPane1.setRightComponent(jsonTableScrollPane);

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    final JFileChooser FILE_DIALOG;

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        int fileDialogReturnValue = FILE_DIALOG.showOpenDialog(this);

        if (fileDialogReturnValue == JFileChooser.APPROVE_OPTION) {
            File file = FILE_DIALOG.getSelectedFile();

            loadFile(file);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jsonTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jsonTreeValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jsonTree.getLastSelectedPathComponent();

        if (node == null) {
            return;
        }

        if (node.isLeaf()) {
            JSONReference jsonNode = (JSONReference) node.getUserObject();
            buildTableElements(jsonNode);
        }
    }//GEN-LAST:event_jsonTreeValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the operating system look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            javax.swing.UIManager.setLookAndFeel(
                    javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jsonObjectTable;
    private javax.swing.JScrollPane jsonTableScrollPane;
    private javax.swing.JTree jsonTree;
    private javax.swing.JScrollPane jsonTreeScrollPane;
    // End of variables declaration//GEN-END:variables
}
